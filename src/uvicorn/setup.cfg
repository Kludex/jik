[flake8]
ignore = W503, E203, B305
max-line-length = 88

[mypy]
disallow_untyped_defs = True
ignore_missing_imports = True
follow_imports = silent
files =
    uvicorn/lifespan,
    tests/test_lifespan.py,
    uvicorn/config.py,
    tests/test_config.py,
    uvicorn/middleware/message_logger.py,
    uvicorn/supervisors/basereload.py,
    uvicorn/importer.py,
    tests/importer/test_importer.py,
    uvicorn/protocols/utils.py,
    uvicorn/middleware/proxy_headers.py,
    tests/middleware/test_proxy_headers.py,
    uvicorn/loops,
    uvicorn/main.py,
    uvicorn/workers.py,
    uvicorn/protocols/http/auto.py,
    uvicorn/protocols/websockets/auto.py,
    uvicorn/supervisors/__init__.py,
    uvicorn/middleware/debug.py,
    uvicorn/middleware/wsgi.py,
    tests/middleware/test_wsgi.py,
    uvicorn/supervisors/watchgodreload.py,
    uvicorn/logging.py,
    uvicorn/middleware/asgi2.py,
    uvicorn/_handlers,
    uvicorn/server.py,
    uvicorn/__init__.py,
    uvicorn/__main__.py,
    uvicorn/subprocess.py,
    uvicorn/protocols/http/flow_control.py,
    uvicorn/supervisors/statreload.py,
    uvicorn/supervisors/multiprocess.py,
    uvicorn/middleware/__init__.py,
    uvicorn/protocols/__init__.py,
    uvicorn/protocols/http/__init__.py,
    uvicorn/protocols/websockets/__init__.py


[mypy-tests.*]
disallow_untyped_defs = False
check_untyped_defs = True

[tool:isort]
profile = black
combine_as_imports = True
known_first_party = uvicorn,tests
known_third_party = click,does_not_exist,gunicorn,h11,httptools,pytest,requests,setuptools,urllib3,uvloop,watchgod,websockets,wsproto,yaml

[tool:pytest]
addopts = -rxXs
  --strict-config
  --strict-markers
xfail_strict=True
filterwarnings=
    # Turn warnings that aren't filtered into exceptions
    error
    # Workaround for Python 3.9.7 (see https://bugs.python.org/issue45097)
    ignore:The loop argument is deprecated since Python 3\.8, and scheduled for removal in Python 3\.10\.:DeprecationWarning:asyncio

[coverage:run]
omit = venv/*
include = uvicorn/*, tests/*
plugins =
  coverage_conditional_plugin

[coverage:coverage_conditional_plugin]
rules =
  "sys_platform == 'win32'": py-win32
